description: Compute metrics from tract catalogs
tasks:
  TE1:
    class: lsst.faro.measurement.TractMeasurementTask
    config:
      connections.package: validate_drp
      connections.metric: TE1
      python: |
        from lsst.faro.measurement import TExTask
        config.measure.retarget(TExTask)
        config.measure.minSep = 0.25
        config.measure.maxSep = 1.0
        config.measure.shearConvention = False
  TE2:
    class: lsst.faro.measurement.TractMeasurementTask
    config:
      connections.package: validate_drp
      connections.metric: TE2
      python: |
        from lsst.faro.measurement import TExTask
        config.measure.retarget(TExTask)
        config.measure.minSep = 5.0
        config.measure.maxSep = 20.0
        config.measure.shearConvention = False
  skyObjectMean:
    class: lsst.faro.measurement.TractTableMeasurementTask
    config:
      measure.statistic: MEAN
      connections.package: pipe_analysis
      connections.metric: skyObjectMean_ap09Flux
      python: |
        from lsst.faro.measurement import FluxStatisticTask
        import lsst.faro.utils.selectors as selectors
        config.measure.retarget(FluxStatisticTask)
        config.measure.columnsBand = {"flux": "ap09Flux"}
        config.measure.selectorActions.FlagSelector=selectors.FlagSelector
        config.measure.selectorActions.FlagSelector.selectWhenTrue=["sky_object"]
        config.measure.selectorActions.PerBandFlagSelector=selectors.PerBandFlagSelector
        config.measure.selectorActions.PerBandFlagSelector.selectWhenFalse=["pixelFlags_edge"]
  skyObjectStd:
    class: lsst.faro.measurement.TractTableMeasurementTask
    config:
      measure.statistic: STDEV
      connections.package: pipe_analysis
      connections.metric: skyObjectStd_ap09Flux
      python: |
        from lsst.faro.measurement import FluxStatisticTask
        import lsst.faro.utils.selectors as selectors
        config.measure.retarget(FluxStatisticTask)
        config.measure.columnsBand = {"flux": "ap09Flux"}
        config.measure.selectorActions.FlagSelector=selectors.FlagSelector
        config.measure.selectorActions.FlagSelector.selectWhenTrue=["sky_object"]
        config.measure.selectorActions.PerBandFlagSelector=selectors.PerBandFlagSelector
        config.measure.selectorActions.PerBandFlagSelector.selectWhenFalse=["pixelFlags_edge"]
